"use strict";
(globalThis["webpackChunkchallenge"] = globalThis["webpackChunkchallenge"] || []).push([["components-atoms-Text-Subtitle-stories"],{

/***/ "./src/components/atoms/Text/Subtitle.stories.tsx":
/*!********************************************************!*\
  !*** ./src/components/atoms/Text/Subtitle.stories.tsx ***!
  \********************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SubtitleBase: () => (/* binding */ SubtitleBase),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
Object(function webpackMissingModule() { var e = new Error("Cannot find module './Subtitle'"); e.code = 'MODULE_NOT_FOUND'; throw e; }());
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

/* eslint-disable */


/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  component: Object(function webpackMissingModule() { var e = new Error("Cannot find module './Subtitle'"); e.code = 'MODULE_NOT_FOUND'; throw e; }()),
  title: "Atoms/Subtitle",
  tags: ["autodocs"],
  argTypes: {
    color: {
      control: "color"
    }
  }
});
const SubtitleBase = {
  args: {
    text: "Subtitle",
    color: "#646565"
  }
};
SubtitleBase.parameters = {
  ...SubtitleBase.parameters,
  docs: {
    ...SubtitleBase.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    text: \"Subtitle\",\n    color: \"#646565\"\n  }\n}",
      ...SubtitleBase.parameters?.docs?.source
    }
  }
};;const __namedExportsOrder = ["SubtitleBase"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

}]);
//# sourceMappingURL=components-atoms-Text-Subtitle-stories.iframe.bundle.js.map