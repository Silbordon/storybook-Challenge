{"version":3,"file":"components-molecules-HeaderCard-HeaderCard-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAUA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://challenge/.","webpack://challenge/./src/components/atoms/Avatar/Avatar.tsx","webpack://challenge/./src/components/atoms/Subtitle/Subtitle.tsx","webpack://challenge/./src/components/atoms/Title/Title.tsx","webpack://challenge/./src/components/molecules/HeaderCard/HeaderCard.tsx"],"sourcesContent":[null,"import React from 'react';\nimport styled from 'styled-components';\n\n/**\n * Avatar component with a dinamic image.\n * @param imagePath - the url path\n */\n\n\ntype AvatarProps = {\n  imagePath: string;\n}\n\nconst AvatarContainer = styled.div<AvatarProps>`\n  border-radius: 2.5rem;\n  width: 2.5rem;\n  height: 2.5rem;\n  flex-shrink: 0;\n  background: ${({imagePath}) => `url(${imagePath}), lightgray 50% / cover no-repeat`};\n`;\n\nconst Avatar: React.FC<AvatarProps> = ({ imagePath }) => {\n  return <AvatarContainer imagePath={imagePath} />;\n};\n\nexport default Avatar;\n\n","import styled from \"styled-components\";\n\n/**\n * Standard prototype that represents the Subtitle with a specific font size and line height and weight and text provided as properties.\n * @param text - the text content\n * @param color - (optional) text color content\n */\n\ntype SubtitleProps = {\n  text: string;\n  color?: string;\n};\n\nconst SubtitleStyleComponent = styled.div<{ color?: string }>`\n  color: ${(props) => (props.color ? props.color : \"#646565\")};\n  /* font-family: \"Open Sans\", sans-serif; */\n  font-size: 0.875rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.125rem; \n`;\n\nconst Subtitle: React.FC<SubtitleProps> = ({ text, color }) => {\n  return <SubtitleStyleComponent color={color}>{text}</SubtitleStyleComponent>;\n};\n\nexport default Subtitle;\n","import styled from \"styled-components\";\n\n/**\n * Standard prototype that represents the title with a specific font size and line height and weight and text provided as properties.\n * @param text - the text content\n * @param color - (optional) text color content\n */\n\ntype TitleProps = {\n  text: string;\n  color?: string;\n}\n\nconst TitleStyleComponent = styled.div<{ color?: string }>`\n  color: ${(props) => (props.color ? props.color : \"#646565\")};\n  font-size: 1.25rem;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 1.25rem;\n  margin-bottom: 0.25rem;\n`;\n\nconst Title: React.FC<TitleProps> = ({ text, color }) => {\n  return <TitleStyleComponent color={color}>{text}</TitleStyleComponent>;\n};\n\nexport default Title;\n","import styled from \"styled-components\";\nimport Subtitle from \"../../atoms/Subtitle/Subtitle\";\nimport Avatar from \"../../atoms/Avatar/Avatar\";\nimport Title from \"../../atoms/Title/Title\";\n\n/**\n *Header Card component with Title component, Subtitle component and Avatar component.\n */\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst TitleContainer = styled.div`\n  margin-left: 0.8rem;\n`;\n\nconst HeaderCard = () => {\n  const OvalImage = \"/assets/icons/Oval.svg\";\n\n  return (\n    <HeaderContainer>\n      <Avatar imagePath={OvalImage} />\n      <TitleContainer>\n        <Title text=\"Headline 5\" />\n        <Subtitle text=\"Subtitle\" />\n      </TitleContainer>\n    </HeaderContainer>\n  );\n};\n\nexport default HeaderCard;\n"],"names":[],"sourceRoot":""}