"use strict";
globalThis["webpackHotUpdatechallenge"]("components-atoms-LinkButton-LinkButton-stories",{

/***/ "./src/components/atoms/LinkButton/LinkButton.stories.tsx":
/*!****************************************************************!*\
  !*** ./src/components/atoms/LinkButton/LinkButton.stories.tsx ***!
  \****************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LinkBase: () => (/* binding */ LinkBase),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _LinkButton__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LinkButton */ "./src/components/atoms/LinkButton/LinkButton.tsx");
/* harmony import */ var react_router_dom__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-router-dom */ "./node_modules/react-router/dist/index.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/LinkButton/LinkButton.stories.tsx";



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: "Atoms/LinkButton",
  component: _LinkButton__WEBPACK_IMPORTED_MODULE_0__["default"],
  tags: ["autodocs"],
  decorators: [Story => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(react_router_dom__WEBPACK_IMPORTED_MODULE_2__.MemoryRouter, {
    initialEntries: ['/'],
    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(Story, {}, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 12,
      columnNumber: 15
    }, undefined)
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 11,
    columnNumber: 13
  }, undefined)],
  argTypes: {
    color: {
      control: "color"
    }
  }
});

//@ts-ignore
const Template = args => /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_LinkButton__WEBPACK_IMPORTED_MODULE_0__["default"], {
  ...args
}, void 0, false, {
  fileName: _jsxFileName,
  lineNumber: 23,
  columnNumber: 57
}, undefined);

//@ts-ignore
_c = Template;
const LinkBase = Template.bind({});
LinkBase.args = {
  to: "*",
  text: "LINK 1"
};
var _c;
__webpack_require__.$Refresh$.register(_c, "Template");
LinkBase.parameters = {
  ...LinkBase.parameters,
  docs: {
    ...LinkBase.parameters?.docs,
    source: {
      originalSource: "args => <LinkButton {...args} />",
      ...LinkBase.parameters?.docs?.source
    }
  }
};;const __namedExportsOrder = ["LinkBase"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});
//# sourceMappingURL=components-atoms-LinkButton-LinkButton-stories.4b8248ae2c5a02df5c05.hot-update.js.map