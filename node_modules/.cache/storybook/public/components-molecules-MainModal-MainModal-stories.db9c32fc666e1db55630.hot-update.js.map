{"version":3,"file":"components-molecules-MainModal-MainModal-stories.db9c32fc666e1db55630.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAYA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AA/CA;AAiDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://challenge/./src/components/atoms/InputText/FloatingLabelInput.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\n/**\n * Floating Label Input component\n * @param labelText - string with label text\n * @param placeholderText - string with placeholder text\n */\n\n\ntype FloatingLabelInputProps = {\n  labelText: string;\n  placeholderText: string;\n};\n\nconst FloatingLabelInputContainer = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n`;\n\nconst Input = styled.input<{ isError: boolean }>`\n  width: 100%;\n  height: 3.5rem;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n  background: #f0f0f0;\n  color: rgba(0, 0, 0, 0.54);\n  font-family: Roboto;\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1rem;\n  margin-top: 0.5rem;\n  padding: 1.5rem 0.5rem 0.5rem 1rem;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-bottom-width: 2px;\n    border-bottom-color: ${({ isError }) => (isError ? \"red\" : \"#2979FF\")};\n  }\n\n  &:not(:placeholder-shown) + label {\n    transform: translateY(-130%) scale(0.75);\n    color: ${({ isError }) => (isError ? \"red\" : \"#2979FF\")};\n  }\n\n  ${({ isError }) =>\n    isError &&\n    css`\n      border-color: red;\n    `}\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 0.8rem;\n  left: 1rem;\n  color: #2979ff;\n  font-family: Roboto;\n  font-size: 0.75rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n  transition: 0.3s ease-out;\n  transform-origin: top left;\n`;\n\nconst ErrorMessage = styled.span`\n  color: red;\n  font-family: Roboto;\n  font-size: 0.7rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n`;\n\nconst FloatingLabelInput: React.FC<FloatingLabelInputProps> = ({\n  labelText,\n  placeholderText,\n}) => {\n  const [value, setValue] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [textError, setTextError] = useState(\"\");\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    if (isError) {\n      setIsError(false);\n    }\n  };\n\n  const handleInputBlur = () => {\n    handleInputValidation();\n  };\n\n  const handleInputValidation = () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (value.trim() === \"\") {\n      setIsError(true);\n      setTextError(\"El campo no puede estar vac√≠o\");\n    } else if (!emailRegex.test(value.trim())) {\n      setIsError(true);\n      setTextError(\"Formato de Email incorrecto\");\n    } else {\n      setIsError(false);\n    }\n  };\n\n  return (\n    <FloatingLabelInputContainer>\n      <Input\n        type=\"email\"\n        value={value}\n        isError={isError}\n        placeholder={placeholderText}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n      />\n      <Label>{labelText}</Label>\n      {isError && <ErrorMessage>{textError}</ErrorMessage>}\n    </FloatingLabelInputContainer>\n  );\n};\n\nexport default FloatingLabelInput;\n"],"names":[],"sourceRoot":""}