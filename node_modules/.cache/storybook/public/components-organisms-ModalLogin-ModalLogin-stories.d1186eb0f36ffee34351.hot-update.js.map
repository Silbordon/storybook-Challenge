{"version":3,"file":"components-organisms-ModalLogin-ModalLogin-stories.d1186eb0f36ffee34351.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://challenge/./src/components/atoms/Modal/Modal.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\n/**\n * Modal Component\n * @param isOpen - boolean with\n * @param onClose - funtion for modal close\n * @param children - (optional) option to add any component\n */\n\ntype ModalProps = {\n  isOpen: boolean;\n  onClose?: () => void;\n  children?: React.ReactNode;\n};\n\nconst ModalContainer = styled.div<ModalProps>`\n  display: ${({ isOpen }) => (isOpen ? \"block\" : \"none\")};\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 23.4375rem;\n  height: 23.875rem;\n  flex-shrink: 0;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  padding: 1rem;\n  box-shadow: 0px 0px 25px 10px rgba(0, 0, 0, 0.1);\n  z-index: 999;\n`;\n\nconst CloseButton = styled.button`\n  position: absolute;\n  top: 1rem;\n  right: 0.5rem;\n  background: none;\n  border: none;\n  cursor: pointer;\n  font-size: 1rem;\n`;\n\nconst CloseIcon = styled.img`\n  width: 1rem;\n  height: 1rem;\n`;\n\nconst closeIcon = \"/assets/icons/Vector.svg\";\n\nconst Modal: FC<ModalProps> = ({ isOpen, onClose, children }) => {\n  return (\n    <ModalContainer isOpen={isOpen}>\n      <CloseButton onClick={onClose}>\n        <CloseIcon src={closeIcon} alt=\"Close\" />\n      </CloseButton>\n      {children}\n    </ModalContainer>\n  );\n};\n\nexport default Modal;\n"],"names":[],"sourceRoot":""}