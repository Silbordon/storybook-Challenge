{"version":3,"file":"components-molecules-FooterCard-FooterCard-stories.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;;AAEA;AACA;AACA;AACA;AAHA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAzBA;AA2BA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA","sources":["webpack://challenge/.","webpack://challenge/./src/components/atoms/IconFavorite/IconFavorite.tsx","webpack://challenge/./src/components/atoms/LinkButton/LinkButton.tsx","webpack://challenge/./src/components/molecules/FooterCard/FooterCard.tsx"],"sourcesContent":[null,"import React, { useState } from \"react\";\nimport styled, { keyframes, css } from \"styled-components\";\n\n/**\n * Icon component with toggle options.\n * @param isFilled - boolean that switches between favorite and non-favorite\n */\n\n\ninterface IconProps {\n  isFilled?: boolean;\n}\n\nconst expand = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst IconImage = styled.img<{ isExpanded: boolean }>`\n  width: 1.5rem;\n  height: 1.5rem;\n  flex-shrink: 0;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n\n  ${({ isExpanded }) =>\n    isExpanded &&\n    css`\n      animation: ${css`\n          ${expand}`} 0.6s ease-in-out;\n    `}\n`;\n\nconst emptyHeart = \"/assets/icons/NoFavorite.svg\";\nconst filledHeart = \"/assets/icons/Favorite.svg\";\n\nconst IconFavorite: React.FC<IconProps> = ({ isFilled}) => {\n\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [filled, setFilled] = useState(isFilled);\n\n  const handleClick = () => {\n    const newFilledState = !filled;\n    setFilled(newFilledState);\n    setIsExpanded(true);\n    // Restaurar la expansión después de un tiempo para el próximo clic\n    setTimeout(() => {\n      setIsExpanded(false);\n    }, 600);\n  };\n\n\n \n  return (\n    <IconImage\n      src={filled ? filledHeart : emptyHeart}\n      alt=\"Heart Icon\"\n      onClick={handleClick}\n      isExpanded={isExpanded}\n    />\n  );\n};\n\nexport default IconFavorite;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n/**\n * Component to render a Link Button\n * @param text - string to add the button label\n * @param to - string to add the font color -var sass-\n * @param color -(optional) string to add color. This color is the same for the hover and active state in the Link underline \n */\n\nexport interface LinkButtonProps {\n  text: string;\n  to: string;\n  color?: string;\n}\n\nconst StyledLinkButton = styled(Link)<{ color?: string }>`\n  color: ${({color}) => (color ? color : \"#5DA552\")};\n  font-family: \"Open Sans\", sans-serif;\n  font-size: 0.875rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.125rem;\n  text-decoration: none;\n  transition: border-bottom 0.3s ease-in-out;\n  cursor: pointer;\n\n  &:hover{\n    border-bottom: 2px solid ${({color}) => (color ? color : \"#5DA552\")};\n  }\n  &:active{\n    border-bottom: 2px solid ${({color}) => (color ? color : \"#5DA552\")};\n  }\n`;\n\nconst LinkButton: React.FC<LinkButtonProps> = ({ to, text, color }) => {\n  return <StyledLinkButton color={color} to={to}>{text}</StyledLinkButton>;\n};\n\nexport default LinkButton;\n","import styled from \"styled-components\";\nimport IconFavorite from \"../../atoms/IconFavorite/IconFavorite\";\nimport LinkButton from \"../../atoms/LinkButton/LinkButton\";\n\n/**\n *Footer Card component with two Links Button and IconFavorite\n */\n\nconst FooterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst LinkContainer = styled.div`\n  width: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst FooterCard = () => {\n  return (\n    <FooterContainer>\n      <LinkContainer>\n        <LinkButton to={\"*\"} text={\"ACTION 1\"} />\n        <LinkButton to={\"*\"} text={\"ACTION 2\"} />\n      </LinkContainer>\n      <IconFavorite isFilled={true} />\n    </FooterContainer>\n  );\n};\n\nexport default FooterCard;\n"],"names":[],"sourceRoot":""}