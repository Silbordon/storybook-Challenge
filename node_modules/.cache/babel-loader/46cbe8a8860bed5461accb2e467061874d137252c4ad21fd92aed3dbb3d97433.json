{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/Input/FloatingLabelInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloatingLabelInputContainer = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n`;\n_c = FloatingLabelInputContainer;\nconst Input = styled.input`\n  width: 100%;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n  background: #f0f0f0;\n  color: rgba(0, 0, 0, 0.54);\n  font-family: Roboto;\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1rem;\n  margin-top: 0.5rem;\n  padding: 1.5rem 0.5rem 0.5rem 0.5rem;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-bottom-width: 2px;\n    border-bottom-color: ${({\n  isError\n}) => isError ? \"red\" : \"#2979FF\"};\n  }\n\n  ${({\n  hasValue,\n  isFocused,\n  isError\n}) => (hasValue || isFocused) && css`\n      + label {\n        transform: translateY(-130%) scale(0.75);\n        color: ${isError ? \"red\" : \"#2979FF\"};\n      }\n    `}\n\n  ${({\n  isError\n}) => isError && css`\n      border-color: red;\n    `}\n`;\n_c2 = Input;\nconst Label = styled.label`\n  position: absolute;\n  top: 0.8rem;\n  left: 0.5rem;\n  color: #2979ff;\n  font-family: Roboto;\n  font-size: 0.75rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n  transition: 0.3s ease-out;\n  transform-origin: top left;\n`;\n_c3 = Label;\nconst ErrorMessage = styled.span`\n  color: red;\n  font-family: Roboto;\n  font-size: 0.7rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n`;\n_c4 = ErrorMessage;\nconst FloatingLabelInput = ({\n  labelText,\n  placeholderText\n}) => {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [isFocused, setIsFocused] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [textError, setTextError] = useState(\"\");\n  const handleInputChange = event => {\n    setValue(event.target.value);\n    if (isError) {\n      setIsError(false);\n    }\n  };\n  const handleInputFocus = () => {\n    setIsFocused(true);\n  };\n  const handleInputBlur = () => {\n    setIsFocused(false);\n    if (value.trim() !== '') {\n      handleInputValidation();\n    }\n  };\n  const handleInputValidation = () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (value.trim() === \"\") {\n      setIsError(true);\n      setTextError(\"El campo no puede estar vacío\");\n    } else if (!emailRegex.test(value.trim())) {\n      setIsError(true);\n      setTextError(\"Formato de Email incorrecto\");\n    } else {\n      setIsError(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FloatingLabelInputContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      value: value,\n      hasValue: !!value,\n      isError: isError,\n      placeholder: isFocused ? \"\" : placeholderText,\n      isFocused: isFocused,\n      onChange: handleInputChange,\n      onFocus: handleInputFocus,\n      onBlur: () => {\n        handleInputBlur();\n        handleInputValidation();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), isError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: textError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n_s(FloatingLabelInput, \"iBttFR7LWAsBm5p1rSAXc5zlGG0=\");\n_c5 = FloatingLabelInput;\nexport default FloatingLabelInput;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"FloatingLabelInputContainer\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"ErrorMessage\");\n$RefreshReg$(_c5, \"FloatingLabelInput\");","map":{"version":3,"names":["React","useState","styled","css","jsxDEV","_jsxDEV","FloatingLabelInputContainer","div","_c","Input","input","isError","hasValue","isFocused","_c2","Label","label","_c3","ErrorMessage","span","_c4","FloatingLabelInput","labelText","placeholderText","_s","value","setValue","setIsFocused","setIsError","textError","setTextError","handleInputChange","event","target","handleInputFocus","handleInputBlur","trim","handleInputValidation","emailRegex","test","children","type","placeholder","onChange","onFocus","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/Input/FloatingLabelInput.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\ntype FloatingLabelInputProps = {\n  labelText: string;\n  placeholderText: string;\n};\n\ntype InputProps = {\n  hasValue: boolean;\n  isError: boolean;\n  isFocused: boolean;\n};\n\nconst FloatingLabelInputContainer = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n`;\n\nconst Input = styled.input<InputProps>`\n  width: 100%;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n  background: #f0f0f0;\n  color: rgba(0, 0, 0, 0.54);\n  font-family: Roboto;\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1rem;\n  margin-top: 0.5rem;\n  padding: 1.5rem 0.5rem 0.5rem 0.5rem;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-bottom-width: 2px;\n    border-bottom-color: ${({ isError }) => (isError ? \"red\" : \"#2979FF\")};\n  }\n\n  ${({ hasValue, isFocused, isError }) =>\n    (hasValue || isFocused) &&\n    css`\n      + label {\n        transform: translateY(-130%) scale(0.75);\n        color: ${isError ? \"red\" : \"#2979FF\"};\n      }\n    `}\n\n  ${({ isError }) =>\n    isError &&\n    css`\n      border-color: red;\n    `}\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 0.8rem;\n  left: 0.5rem;\n  color: #2979ff;\n  font-family: Roboto;\n  font-size: 0.75rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n  transition: 0.3s ease-out;\n  transform-origin: top left;\n`;\n\nconst ErrorMessage = styled.span`\n  color: red;\n  font-family: Roboto;\n  font-size: 0.7rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n`;\n\nconst FloatingLabelInput: React.FC<FloatingLabelInputProps> = ({\n  labelText,\n  placeholderText,\n}) => {\n  const [value, setValue] = useState(\"\");\n  const [isFocused, setIsFocused] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [textError, setTextError] = useState(\"\")\n\n \n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    if (isError) {\n      setIsError(false);\n    }\n  };\n\n  const handleInputFocus = () => {\n    setIsFocused(true);\n  };\n\n  const handleInputBlur = () => {\n    setIsFocused(false);\n    if (value.trim() !== '') {\n      handleInputValidation();\n    }\n  };\n\n  const handleInputValidation = () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (value.trim() === \"\") {\n      setIsError(true);\n      setTextError(\"El campo no puede estar vacío\")\n    } else if (!emailRegex.test(value.trim())) {\n      setIsError(true);\n      setTextError(\"Formato de Email incorrecto\")\n    } else {\n      setIsError(false);\n    }\n  };\n\n  return (\n    <FloatingLabelInputContainer>\n      <Input\n        type=\"text\"\n        value={value}\n        hasValue={!!value}\n        isError={isError}\n        placeholder={isFocused ? \"\" : placeholderText}\n        isFocused={isFocused}\n        onChange={handleInputChange}\n        onFocus={handleInputFocus}\n        onBlur={() => {\n          handleInputBlur();\n          handleInputValidation();\n        }}\n      />\n      <Label>{labelText}</Label>\n      {isError && (\n        <ErrorMessage>{textError}</ErrorMessage>\n      )}\n    </FloatingLabelInputContainer>\n  );\n};\n\nexport default FloatingLabelInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}