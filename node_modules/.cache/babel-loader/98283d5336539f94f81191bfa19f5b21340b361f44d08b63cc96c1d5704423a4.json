{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/LinkButton/LinkButton.stories.tsx\";\n// import type { StoryObj } from \"@storybook/react\";\n// import LinkButton from \"./LinkButton\";\n\n// export default {\n//     title: \"Atoms/LinkButton\",\n//     component: LinkButton,\n//     tags: [\"autodocs\"],\n//     argTypes: {\n//         color: { control: \"color\" },\n//       },\n// }\n// type Story = StoryObj<typeof LinkButton>;\n\n// export const Hover:Story = () => <LinkButton text={\"Link 1\"} to={\"*\"}/>\n// Hover.parameters = { pseudo: { hover: true } }\n\n// import type { Args, StoryObj } from \"@storybook/react\";\n// import LinkButton from \"./LinkButton\";\n\n// export default {\n//     title: \"Atoms/LinkButton\",\n//     component: LinkButton,\n//     tags: [\"autodocs\"],\n//     argTypes: {\n//         color: { control: \"color\" },\n//       },\n// }\n\n// const Template = (args) => <LinkButton {...args}></LinkButton>\n\n// export const Default = Template.bind({})\n\n// export const Hover = Template.bind({})\n// // type Story = StoryObj<typeof LinkButton>;\n\n// export const Hover = () => <LinkButton text={\"Link 1\"} to={\"*\"}/>\n// Hover.parameters = { pseudo: { hover: true } }\n\nimport LinkButton from \"./LinkButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: \"Atoms/LinkButton\",\n  component: LinkButton,\n  argTypes: {\n    color: {\n      control: \"color\"\n    }\n  }\n};\n// type Story = StoryObj<typeof LinkButton>;\n\n// const Template: StoryAnnotations<ReactRenderer, LinkButtonProps & LinkButtonStoryArgs, Partial<LinkButtonProps & LinkButtonStoryArgs>> = (args: LinkButtonProps & LinkButtonStoryArgs) => {\n//     // Your implementation here\n//     return <YourComponent {...args} />;\n// };\n\n// type Story = StoryObj<typeof LinkButton>;\n//@ts-ignore\nconst Template = args => /*#__PURE__*/_jsxDEV(LinkButton, {\n  ...args\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 75,\n  columnNumber: 57\n}, this);\n_c = Template;\nexport const Hover = Template.bind({});\nHover.parameters = {\n  pseudo: {\n    hover: true\n  }\n};\n// export const Hover: StoryObj<LinkButtonProps> = () => (\n//     <LinkButton text={\"Link 1\"} to={\"*\"} /> // Asegúrate de que \"text\" y \"to\" sean props válidas en tu componente LinkButton\n// );\nvar _c;\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"names":["LinkButton","jsxDEV","_jsxDEV","title","component","argTypes","color","control","Template","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","Hover","bind","parameters","pseudo","hover","$RefreshReg$"],"sources":["/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/LinkButton/LinkButton.stories.tsx"],"sourcesContent":["// import type { StoryObj } from \"@storybook/react\";\n// import LinkButton from \"./LinkButton\";\n\n\n// export default {\n//     title: \"Atoms/LinkButton\",\n//     component: LinkButton,\n//     tags: [\"autodocs\"],\n//     argTypes: {\n//         color: { control: \"color\" },\n//       },\n// }\n// type Story = StoryObj<typeof LinkButton>;\n\n\n// export const Hover:Story = () => <LinkButton text={\"Link 1\"} to={\"*\"}/>\n// Hover.parameters = { pseudo: { hover: true } }\n\n\n// import type { Args, StoryObj } from \"@storybook/react\";\n// import LinkButton from \"./LinkButton\";\n\n\n// export default {\n//     title: \"Atoms/LinkButton\",\n//     component: LinkButton,\n//     tags: [\"autodocs\"],\n//     argTypes: {\n//         color: { control: \"color\" },\n//       },\n// }\n\n\n// const Template = (args) => <LinkButton {...args}></LinkButton>\n\n// export const Default = Template.bind({})\n\n// export const Hover = Template.bind({})\n// // type Story = StoryObj<typeof LinkButton>;\n\n\n// export const Hover = () => <LinkButton text={\"Link 1\"} to={\"*\"}/>\n// Hover.parameters = { pseudo: { hover: true } }\n\n\nimport type { Args, Story, StoryObj, Meta } from \"@storybook/react\";\nimport { StoryAnnotations } from \"@storybook/types\";\nimport LinkButton, { LinkButtonProps } from \"./LinkButton\";\n\n\n\nexport default {\n    title: \"Atoms/LinkButton\",\n    component: LinkButton,\n    argTypes: {\n        color: { control: \"color\" },\n    },\n} as Meta <typeof LinkButton>\n\ntype LinkButtonStoryArgs = {\n    color: string;\n    // Otros campos de props si existen\n};\n\n// type Story = StoryObj<typeof LinkButton>;\n\n\n// const Template: StoryAnnotations<ReactRenderer, LinkButtonProps & LinkButtonStoryArgs, Partial<LinkButtonProps & LinkButtonStoryArgs>> = (args: LinkButtonProps & LinkButtonStoryArgs) => {\n//     // Your implementation here\n//     return <YourComponent {...args} />;\n// };\n\n// type Story = StoryObj<typeof LinkButton>;\n//@ts-ignore\nconst Template: StoryObj<typeof LinkButton> = (args) => <LinkButton {...args} />;\n\n\nexport const Hover = Template.bind({});\nHover.parameters = { pseudo: { hover: true } };\n// export const Hover: StoryObj<LinkButtonProps> = () => (\n//     <LinkButton text={\"Link 1\"} to={\"*\"} /> // Asegúrate de que \"text\" y \"to\" sean props válidas en tu componente LinkButton\n// );\n\n\n"],"mappings":";AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;;AAGA;AACA;;AAKA,OAAOA,UAAU,MAA2B,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI3D,eAAe;EACXC,KAAK,EAAE,kBAAkB;EACzBC,SAAS,EAAEJ,UAAU;EACrBK,QAAQ,EAAE;IACNC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAQ;EAC9B;AACJ,CAAC;AAOD;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAMC,QAAqC,GAAIC,IAAI,iBAAKP,OAAA,CAACF,UAAU;EAAA,GAAKS;AAAI;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAG,CAAC;AAACC,EAAA,GAA3EN,QAAqC;AAG3C,OAAO,MAAMO,KAAK,GAAGP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAC,CAAC;AACtCD,KAAK,CAACE,UAAU,GAAG;EAAEC,MAAM,EAAE;IAAEC,KAAK,EAAE;EAAK;AAAE,CAAC;AAC9C;AACA;AACA;AAAA,IAAAL,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}