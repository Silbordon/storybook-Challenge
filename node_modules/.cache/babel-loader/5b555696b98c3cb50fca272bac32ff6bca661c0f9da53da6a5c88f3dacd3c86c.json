{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/InputText/FloatingLabelInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\n/**\n * Floating Label Input component\n * @param labelText - string with label text\n * @param placeholderText - string with placeholder text\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloatingLabelInputContainer = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n`;\n_c = FloatingLabelInputContainer;\nconst Input = styled.input`\n  width: 100%;\n  height: 3.5rem;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n  background: #f0f0f0;\n  color: rgba(0, 0, 0, 0.54);\n  font-family: Roboto;\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1rem;\n  margin-top: 0.5rem;\n  padding: 1.5rem 0.5rem 0.5rem 1rem;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-bottom-width: 2px;\n    border-bottom-color: ${({\n  isError\n}) => isError ? \"red\" : \"#2979FF\"};\n  }\n\n  &:not(:placeholder-shown) + label {\n    transform: translateY(-130%) scale(0.75);\n    color: ${({\n  isError\n}) => isError ? \"red\" : \"#2979FF\"};\n  }\n\n  ${({\n  isError\n}) => isError && css`\n      border-color: red;\n    `}\n`;\n_c2 = Input;\nconst Label = styled.label`\n  position: absolute;\n  top: 0.8rem;\n  left: 0.7rem;\n  color: #2979ff;\n  font-family: Roboto;\n  font-size: 0.75rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n  transition: 0.3s ease-out;\n  transform-origin: top left;\n`;\n_c3 = Label;\nconst ErrorMessage = styled.span`\n  color: red;\n  font-family: Roboto;\n  font-size: 0.7rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n`;\n_c4 = ErrorMessage;\nconst FloatingLabelInput = ({\n  labelText,\n  placeholderText\n}) => {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [textError, setTextError] = useState(\"\");\n  const handleInputChange = event => {\n    setValue(event.target.value);\n    if (isError) {\n      setIsError(false);\n    }\n  };\n  const handleInputBlur = () => {\n    handleInputValidation();\n  };\n  const handleInputValidation = () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (value.trim() === \"\") {\n      setIsError(true);\n      setTextError(\"El campo no puede estar vacío\");\n    } else if (!emailRegex.test(value.trim())) {\n      setIsError(true);\n      setTextError(\"Formato de Email incorrecto\");\n    } else {\n      setIsError(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FloatingLabelInputContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"email\",\n      value: value,\n      isError: isError,\n      placeholder: placeholderText,\n      onChange: handleInputChange,\n      onBlur: handleInputBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), isError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: textError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(FloatingLabelInput, \"XRA/w91nSZwFqNiVdQvJENSW9TU=\");\n_c5 = FloatingLabelInput;\nexport default FloatingLabelInput;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"FloatingLabelInputContainer\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"ErrorMessage\");\n$RefreshReg$(_c5, \"FloatingLabelInput\");","map":{"version":3,"names":["React","useState","styled","css","jsxDEV","_jsxDEV","FloatingLabelInputContainer","div","_c","Input","input","isError","_c2","Label","label","_c3","ErrorMessage","span","_c4","FloatingLabelInput","labelText","placeholderText","_s","value","setValue","setIsError","textError","setTextError","handleInputChange","event","target","handleInputBlur","handleInputValidation","emailRegex","trim","test","children","type","placeholder","onChange","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/InputText/FloatingLabelInput.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\n/**\n * Floating Label Input component\n * @param labelText - string with label text\n * @param placeholderText - string with placeholder text\n */\n\n\ntype FloatingLabelInputProps = {\n  labelText: string;\n  placeholderText: string;\n};\n\nconst FloatingLabelInputContainer = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n`;\n\nconst Input = styled.input<{ isError: boolean }>`\n  width: 100%;\n  height: 3.5rem;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n  background: #f0f0f0;\n  color: rgba(0, 0, 0, 0.54);\n  font-family: Roboto;\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1rem;\n  margin-top: 0.5rem;\n  padding: 1.5rem 0.5rem 0.5rem 1rem;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-bottom-width: 2px;\n    border-bottom-color: ${({ isError }) => (isError ? \"red\" : \"#2979FF\")};\n  }\n\n  &:not(:placeholder-shown) + label {\n    transform: translateY(-130%) scale(0.75);\n    color: ${({ isError }) => (isError ? \"red\" : \"#2979FF\")};\n  }\n\n  ${({ isError }) =>\n    isError &&\n    css`\n      border-color: red;\n    `}\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 0.8rem;\n  left: 0.7rem;\n  color: #2979ff;\n  font-family: Roboto;\n  font-size: 0.75rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n  transition: 0.3s ease-out;\n  transform-origin: top left;\n`;\n\nconst ErrorMessage = styled.span`\n  color: red;\n  font-family: Roboto;\n  font-size: 0.7rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n`;\n\nconst FloatingLabelInput: React.FC<FloatingLabelInputProps> = ({\n  labelText,\n  placeholderText,\n}) => {\n  const [value, setValue] = useState(\"\");\n  const [isError, setIsError] = useState(false);\n  const [textError, setTextError] = useState(\"\");\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    if (isError) {\n      setIsError(false);\n    }\n  };\n\n  const handleInputBlur = () => {\n    handleInputValidation();\n  };\n\n  const handleInputValidation = () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    if (value.trim() === \"\") {\n      setIsError(true);\n      setTextError(\"El campo no puede estar vacío\");\n    } else if (!emailRegex.test(value.trim())) {\n      setIsError(true);\n      setTextError(\"Formato de Email incorrecto\");\n    } else {\n      setIsError(false);\n    }\n  };\n\n  return (\n    <FloatingLabelInputContainer>\n      <Input\n        type=\"email\"\n        value={value}\n        isError={isError}\n        placeholder={placeholderText}\n        onChange={handleInputChange}\n        onBlur={handleInputBlur}\n      />\n      <Label>{labelText}</Label>\n      {isError && <ErrorMessage>{textError}</ErrorMessage>}\n    </FloatingLabelInputContainer>\n  );\n};\n\nexport default FloatingLabelInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}