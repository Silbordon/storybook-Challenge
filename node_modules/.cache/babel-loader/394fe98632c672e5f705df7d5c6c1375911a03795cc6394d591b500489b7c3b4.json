{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/LinkButton/LinkButton.stories.tsx\";\n// import type { StoryObj } from \"@storybook/react\";\n// import LinkButton from \"./LinkButton\";\n\n// export default {\n//     title: \"Atoms/LinkButton\",\n//     component: LinkButton,\n//     tags: [\"autodocs\"],\n//     argTypes: {\n//         color: { control: \"color\" },\n//       },\n// }\n// type Story = StoryObj<typeof LinkButton>;\n\n// export const Hover:Story = () => <LinkButton text={\"Link 1\"} to={\"*\"}/>\n// Hover.parameters = { pseudo: { hover: true } }\n\n// import type { Args, StoryObj } from \"@storybook/react\";\n// import LinkButton from \"./LinkButton\";\n\n// export default {\n//     title: \"Atoms/LinkButton\",\n//     component: LinkButton,\n//     tags: [\"autodocs\"],\n//     argTypes: {\n//         color: { control: \"color\" },\n//       },\n// }\n\n// const Template = (args) => <LinkButton {...args}></LinkButton>\n\n// export const Default = Template.bind({})\n\n// export const Hover = Template.bind({})\n// // type Story = StoryObj<typeof LinkButton>;\n\n// export const Hover = () => <LinkButton text={\"Link 1\"} to={\"*\"}/>\n// Hover.parameters = { pseudo: { hover: true } }\n\nimport LinkButton from \"./LinkButton\";\nimport { MemoryRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: \"Atoms/LinkButton\",\n  component: LinkButton,\n  decorators: [Story => /*#__PURE__*/_jsxDEV(MemoryRouter, {\n    initialEntries: ['/'],\n    children: /*#__PURE__*/_jsxDEV(Story, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 13\n  }, this)],\n  argTypes: {\n    color: {\n      control: \"color\"\n    }\n  }\n};\n// type Story = StoryObj<typeof LinkButton>;\n\n// const Template: StoryAnnotations<ReactRenderer, LinkButtonProps & LinkButtonStoryArgs, Partial<LinkButtonProps & LinkButtonStoryArgs>> = (args: LinkButtonProps & LinkButtonStoryArgs) => {\n//     // Your implementation here\n//     return <YourComponent {...args} />;\n// };\n\n// type Story = StoryObj<typeof LinkButton>;\n//@ts-ignore\nconst Template = args => /*#__PURE__*/_jsxDEV(LinkButton, {\n  ...args\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 57\n}, this);\n\n//@ts-ignore\n_c = Template;\nexport const LinkBase = Template.bind({});\nLinkBase.args = {\n  to: \"*\",\n  text: \"LINK 1\"\n};\n// Hover.parameters = { pseudo: { hover: true } };\n// export const Hover: StoryObj<LinkButtonProps> = () => (\n//     <LinkButton text={\"Link 1\"} to={\"*\"} /> // Asegúrate de que \"text\" y \"to\" sean props válidas en tu componente LinkButton\n// );\nvar _c;\n$RefreshReg$(_c, \"Template\");","map":{"version":3,"names":["LinkButton","MemoryRouter","jsxDEV","_jsxDEV","title","component","decorators","Story","initialEntries","children","fileName","_jsxFileName","lineNumber","columnNumber","argTypes","color","control","Template","args","_c","LinkBase","bind","to","text","$RefreshReg$"],"sources":["/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/LinkButton/LinkButton.stories.tsx"],"sourcesContent":["// import type { StoryObj } from \"@storybook/react\";\n// import LinkButton from \"./LinkButton\";\n\n\n// export default {\n//     title: \"Atoms/LinkButton\",\n//     component: LinkButton,\n//     tags: [\"autodocs\"],\n//     argTypes: {\n//         color: { control: \"color\" },\n//       },\n// }\n// type Story = StoryObj<typeof LinkButton>;\n\n\n// export const Hover:Story = () => <LinkButton text={\"Link 1\"} to={\"*\"}/>\n// Hover.parameters = { pseudo: { hover: true } }\n\n\n// import type { Args, StoryObj } from \"@storybook/react\";\n// import LinkButton from \"./LinkButton\";\n\n\n// export default {\n//     title: \"Atoms/LinkButton\",\n//     component: LinkButton,\n//     tags: [\"autodocs\"],\n//     argTypes: {\n//         color: { control: \"color\" },\n//       },\n// }\n\n\n// const Template = (args) => <LinkButton {...args}></LinkButton>\n\n// export const Default = Template.bind({})\n\n// export const Hover = Template.bind({})\n// // type Story = StoryObj<typeof LinkButton>;\n\n\n// export const Hover = () => <LinkButton text={\"Link 1\"} to={\"*\"}/>\n// Hover.parameters = { pseudo: { hover: true } }\n\n\nimport type { Args, Story, StoryObj, Meta } from \"@storybook/react\";\nimport { StoryAnnotations } from \"@storybook/types\";\nimport LinkButton, { LinkButtonProps } from \"./LinkButton\";\nimport { MemoryRouter } from \"react-router-dom\";\n\n\n\nexport default {\n    title: \"Atoms/LinkButton\",\n    component: LinkButton,\n    decorators: [\n        (Story) => (\n            <MemoryRouter initialEntries={['/']}>\n              <Story />\n            </MemoryRouter>\n          ),\n    ],\n    argTypes: {\n        color: { control: \"color\" },\n    },\n} as Meta <typeof LinkButton>\n\ntype LinkButtonStoryArgs = {\n    color: string;\n    // Otros campos de props si existen\n};\n\n// type Story = StoryObj<typeof LinkButton>;\n\n\n// const Template: StoryAnnotations<ReactRenderer, LinkButtonProps & LinkButtonStoryArgs, Partial<LinkButtonProps & LinkButtonStoryArgs>> = (args: LinkButtonProps & LinkButtonStoryArgs) => {\n//     // Your implementation here\n//     return <YourComponent {...args} />;\n// };\n\n// type Story = StoryObj<typeof LinkButton>;\n//@ts-ignore\nconst Template: StoryObj<typeof LinkButton> = (args) => <LinkButton {...args} />;\n\n//@ts-ignore\nexport const LinkBase = Template.bind({});\nLinkBase.args= {\n    to: \"*\" ,\n    text: \"LINK 1\"\n}\n// Hover.parameters = { pseudo: { hover: true } };\n// export const Hover: StoryObj<LinkButtonProps> = () => (\n//     <LinkButton text={\"Link 1\"} to={\"*\"} /> // Asegúrate de que \"text\" y \"to\" sean props válidas en tu componente LinkButton\n// );\n\n\n"],"mappings":";AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAGA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;;AAGA;AACA;;AAKA,OAAOA,UAAU,MAA2B,cAAc;AAC1D,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIhD,eAAe;EACXC,KAAK,EAAE,kBAAkB;EACzBC,SAAS,EAAEL,UAAU;EACrBM,UAAU,EAAE,CACPC,KAAK,iBACFJ,OAAA,CAACF,YAAY;IAACO,cAAc,EAAE,CAAC,GAAG,CAAE;IAAAC,QAAA,eAClCN,OAAA,CAACI,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CACf,CACN;EACDC,QAAQ,EAAE;IACNC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAQ;EAC9B;AACJ,CAAC;AAOD;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAMC,QAAqC,GAAIC,IAAI,iBAAKf,OAAA,CAACH,UAAU;EAAA,GAAKkB;AAAI;EAAAR,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAG,CAAC;;AAEhF;AAAAM,EAAA,GAFMF,QAAqC;AAG3C,OAAO,MAAMG,QAAQ,GAAGH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;AACzCD,QAAQ,CAACF,IAAI,GAAE;EACXI,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE;AACV,CAAC;AACD;AACA;AACA;AACA;AAAA,IAAAJ,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}