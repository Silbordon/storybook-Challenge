{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/IconFavorite/IconFavorite.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import styled from \"styled-components\";\n\n// interface HeartButtonProps {\n//   isFilled: boolean;\n// }\n\n// const HeartIcon = styled.img`\n//   width: 1.5rem;\n//   height: 1.5rem;\n//   flex-shrink: 0;\n//   cursor: pointer;\n// `;\n\n// const emptyHeart = \"/assets/icons/NoFavorite.svg\";\n// const filledHeart = \"/assets/icons/Favorite.svg\";\n\n// const IconFavorite: React.FC<HeartButtonProps> = ({ isFilled }) => {\n//   const [filled, setFilled] = useState(isFilled);\n\n//   const handleClick = () => {\n//     const newFilledState = !filled;\n//     setFilled(newFilledState);\n//   };\n\n//   return (\n//     <HeartIcon\n//       src={filled ? filledHeart : emptyHeart}\n//       alt=\"Heart Icon\"\n//       onClick={handleClick}\n//     />\n//   );\n// };\n\n// export default IconFavorite;\n\n// import React, { useState } from \"react\";\n// import styled, { keyframes } from \"styled-components\";\n\n// interface IconProps {\n//   isFilled: boolean;\n// }\n\n// const expand = keyframes`\n//   0% {\n//     transform: scale(1);\n//   }\n//   50% {\n//     transform: scale(1.2);\n//   }\n//   100% {\n//     transform: scale(1);\n//   }\n// `;\n\n// const IconImage = styled.img<{ isExpanded: boolean }>`\n//   width: 1.5rem;\n//   height: 1.5rem;\n//   flex-shrink: 0;\n//   cursor: pointer;\n//   transition: transform 0.3s ease-in-out;\n\n//   ${({ isExpanded }) => isExpanded && `\n//     animation: ${expand} 0.6s ease-in-out;\n//   `}\n// `;\n\n// const emptyHeart = \"/assets/icons/NoFavorite.svg\";\n// const filledHeart = \"/assets/icons/Favorite.svg\";\n\n// const IconFavorite: React.FC<IconProps> = ({ isFilled }) => {\n//   const [isExpanded, setIsExpanded] = useState(false);\n//   const [filled, setFilled] = useState(isFilled);\n\n//   const handleClick = () => {\n//     const newFilledState = !filled;\n//     setFilled(newFilledState);\n//     setIsExpanded(true);\n\n//     // Restaurar la expansión después de un tiempo para el próximo clic\n//     setTimeout(() => {\n//       setIsExpanded(false);\n//     }, 600);\n//   };\n\n//   return (\n//     <IconImage\n//       src={filled ? filledHeart : emptyHeart}\n//       alt=\"Heart Icon\"\n//       onClick={handleClick}\n//       isExpanded={isExpanded}\n//     />\n//   );\n// };\n\n// export default IconFavorite;\n\nimport React, { useState } from \"react\";\nimport styled, { keyframes, css } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst expand = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\nconst HeartIcon = styled.img`\n  width: 1.5rem;\n  height: 1.5rem;\n  flex-shrink: 0;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n\n  ${({\n  isExpanded\n}) => isExpanded && css`\n      animation: ${css`${expand}`} 0.6s ease-in-out;\n    `}\n`;\n_c = HeartIcon;\nconst emptyHeart = \"/assets/icons/NoFavorite.svg\";\nconst filledHeart = \"/assets/icons/Favorite.svg\";\nconst IconFavorite = ({\n  isFilled\n}) => {\n  _s();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [filled, setFilled] = useState(isFilled);\n  const handleClick = () => {\n    const newFilledState = !filled;\n    setFilled(newFilledState);\n    setIsExpanded(true);\n\n    // Restaurar la expansión después de un tiempo para el próximo clic\n    setTimeout(() => {\n      setIsExpanded(false);\n    }, 600);\n  };\n  return /*#__PURE__*/_jsxDEV(HeartIcon, {\n    src: filled ? filledHeart : emptyHeart,\n    alt: \"Heart Icon\",\n    onClick: handleClick,\n    isExpanded: isExpanded\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(IconFavorite, \"hqJf79V4ASp6lFLF1xxVmQeoGuM=\");\n_c2 = IconFavorite;\nexport default IconFavorite;\nvar _c, _c2;\n$RefreshReg$(_c, \"HeartIcon\");\n$RefreshReg$(_c2, \"IconFavorite\");","map":{"version":3,"names":["React","useState","styled","keyframes","css","jsxDEV","_jsxDEV","expand","HeartIcon","img","isExpanded","_c","emptyHeart","filledHeart","IconFavorite","isFilled","_s","setIsExpanded","filled","setFilled","handleClick","newFilledState","setTimeout","src","alt","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/IconFavorite/IconFavorite.tsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import styled from \"styled-components\";\n\n// interface HeartButtonProps {\n//   isFilled: boolean;\n// }\n\n// const HeartIcon = styled.img`\n//   width: 1.5rem;\n//   height: 1.5rem;\n//   flex-shrink: 0;\n//   cursor: pointer;\n// `;\n\n// const emptyHeart = \"/assets/icons/NoFavorite.svg\";\n// const filledHeart = \"/assets/icons/Favorite.svg\";\n\n// const IconFavorite: React.FC<HeartButtonProps> = ({ isFilled }) => {\n//   const [filled, setFilled] = useState(isFilled);\n\n//   const handleClick = () => {\n//     const newFilledState = !filled;\n//     setFilled(newFilledState);\n//   };\n\n//   return (\n//     <HeartIcon\n//       src={filled ? filledHeart : emptyHeart}\n//       alt=\"Heart Icon\"\n//       onClick={handleClick}\n//     />\n//   );\n// };\n\n// export default IconFavorite;\n\n// import React, { useState } from \"react\";\n// import styled, { keyframes } from \"styled-components\";\n\n// interface IconProps {\n//   isFilled: boolean;\n// }\n\n// const expand = keyframes`\n//   0% {\n//     transform: scale(1);\n//   }\n//   50% {\n//     transform: scale(1.2);\n//   }\n//   100% {\n//     transform: scale(1);\n//   }\n// `;\n\n// const IconImage = styled.img<{ isExpanded: boolean }>`\n//   width: 1.5rem;\n//   height: 1.5rem;\n//   flex-shrink: 0;\n//   cursor: pointer;\n//   transition: transform 0.3s ease-in-out;\n\n//   ${({ isExpanded }) => isExpanded && `\n//     animation: ${expand} 0.6s ease-in-out;\n//   `}\n// `;\n\n// const emptyHeart = \"/assets/icons/NoFavorite.svg\";\n// const filledHeart = \"/assets/icons/Favorite.svg\";\n\n// const IconFavorite: React.FC<IconProps> = ({ isFilled }) => {\n//   const [isExpanded, setIsExpanded] = useState(false);\n//   const [filled, setFilled] = useState(isFilled);\n\n//   const handleClick = () => {\n//     const newFilledState = !filled;\n//     setFilled(newFilledState);\n//     setIsExpanded(true);\n\n//     // Restaurar la expansión después de un tiempo para el próximo clic\n//     setTimeout(() => {\n//       setIsExpanded(false);\n//     }, 600);\n//   };\n\n//   return (\n//     <IconImage\n//       src={filled ? filledHeart : emptyHeart}\n//       alt=\"Heart Icon\"\n//       onClick={handleClick}\n//       isExpanded={isExpanded}\n//     />\n//   );\n// };\n\n// export default IconFavorite;\n\n\nimport React, { useState } from \"react\";\nimport styled, { keyframes, css } from \"styled-components\";\n\ninterface HeartButtonProps {\n  isFilled: boolean;\n}\n\nconst expand = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(1.2);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\nconst HeartIcon = styled.img<{ isExpanded: boolean }>`\n  width: 1.5rem;\n  height: 1.5rem;\n  flex-shrink: 0;\n  cursor: pointer;\n  transition: transform 0.3s ease-in-out;\n\n  ${({ isExpanded }) =>\n    isExpanded &&\n    css`\n      animation: ${css`${expand}`} 0.6s ease-in-out;\n    `}\n`;\n\nconst emptyHeart = \"/assets/icons/NoFavorite.svg\";\nconst filledHeart = \"/assets/icons/Favorite.svg\";\n\nconst IconFavorite: React.FC<HeartButtonProps> = ({ isFilled }) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [filled, setFilled] = useState(isFilled);\n\n  const handleClick = () => {\n    const newFilledState = !filled;\n    setFilled(newFilledState);\n    setIsExpanded(true);\n\n    // Restaurar la expansión después de un tiempo para el próximo clic\n    setTimeout(() => {\n      setIsExpanded(false);\n    }, 600);\n  };\n\n  return (\n    <HeartIcon\n      src={filled ? filledHeart : emptyHeart}\n      alt=\"Heart Icon\"\n      onClick={handleClick}\n      isExpanded={isExpanded}\n    />\n  );\n};\n\nexport default IconFavorite;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,IAAIC,SAAS,EAAEC,GAAG,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM3D,MAAMC,MAAM,GAAGJ,SAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMK,SAAS,GAAGN,MAAM,CAACO,GAA6B;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;EAAEC;AAAW,CAAC,KACfA,UAAU,IACVN,GAAI;AACR,mBAAmBA,GAAI,GAAEG,MAAO,EAAE;AAClC,KAAM;AACN,CAAC;AAACI,EAAA,GAZIH,SAAS;AAcf,MAAMI,UAAU,GAAG,8BAA8B;AACjD,MAAMC,WAAW,GAAG,4BAA4B;AAEhD,MAAMC,YAAwC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM,CAACN,UAAU,EAAEO,aAAa,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAACc,QAAQ,CAAC;EAE9C,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,cAAc,GAAG,CAACH,MAAM;IAC9BC,SAAS,CAACE,cAAc,CAAC;IACzBJ,aAAa,CAAC,IAAI,CAAC;;IAEnB;IACAK,UAAU,CAAC,MAAM;MACfL,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,oBACEX,OAAA,CAACE,SAAS;IACRe,GAAG,EAAEL,MAAM,GAAGL,WAAW,GAAGD,UAAW;IACvCY,GAAG,EAAC,YAAY;IAChBC,OAAO,EAAEL,WAAY;IACrBV,UAAU,EAAEA;EAAW;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEN,CAAC;AAACb,EAAA,CAvBIF,YAAwC;AAAAgB,GAAA,GAAxChB,YAAwC;AAyB9C,eAAeA,YAAY;AAAC,IAAAH,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}