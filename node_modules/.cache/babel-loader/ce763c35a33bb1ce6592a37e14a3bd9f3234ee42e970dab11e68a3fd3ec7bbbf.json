{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/Input/FloatingLabelInput.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloatingLabelInputContainer = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n`;\n_c = FloatingLabelInputContainer;\nconst Input = styled.input`\n  width: 100%;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n  background: #F0F0F0;\n  color: rgba(0, 0, 0, 0.54);\n  font-family: Roboto;\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1rem;\n  padding: 0.5rem;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-color: ${({\n  isError\n}) => isError ? 'red' : '#2979FF'};\n  }\n\n  ${({\n  hasValue,\n  isFocused,\n  isError\n}) => (hasValue || isFocused) && css`\n      + label {\n        transform: translateY(-130%) scale(0.75);\n        color: ${isError ? 'red' : '#2979FF'};\n      }\n    `}\n\n  ${({\n  isError\n}) => isError && css`\n      border-color: red;\n    `}\n`;\n_c2 = Input;\nconst Label = styled.label`\n  position: absolute;\n  top: 0.25rem;\n  left: 0.5rem;\n  color: #2979FF;\n  font-family: Roboto;\n  font-size: 0.75rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n  pointer-events: none;\n  transition: 0.3s ease-out;\n  transform-origin: top left;\n`;\n_c3 = Label;\nconst ErrorMessage = styled.span`\n  color: red;\n  font-family: Roboto;\n  font-size: 0.75rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n`;\n_c4 = ErrorMessage;\nconst FloatingLabelInput = ({\n  labelText\n}) => {\n  _s();\n  const [value, setValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const handleInputChange = event => {\n    setValue(event.target.value);\n    if (isError) {\n      setIsError(false);\n    }\n  };\n  const handleInputFocus = () => {\n    setIsFocused(true);\n  };\n  const handleInputBlur = () => {\n    setIsFocused(false);\n  };\n  const handleInputValidation = () => {\n    // Puedes implementar tu lógica de validación aquí\n    if (value.trim() === '') {\n      setIsError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FloatingLabelInputContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      value: value,\n      hasValue: !!value,\n      isError: isError,\n      isFocused: isFocused,\n      onChange: handleInputChange,\n      onFocus: handleInputFocus,\n      onBlur: () => {\n        handleInputBlur();\n        handleInputValidation();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Label, {\n      children: labelText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), isError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: \"Error: El campo no puede estar vac\\xEDo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(FloatingLabelInput, \"2hhWk1yWNceaW/qbb6j/XfkFRIo=\");\n_c5 = FloatingLabelInput;\nexport default FloatingLabelInput;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"FloatingLabelInputContainer\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"Label\");\n$RefreshReg$(_c4, \"ErrorMessage\");\n$RefreshReg$(_c5, \"FloatingLabelInput\");","map":{"version":3,"names":["React","useState","styled","css","jsxDEV","_jsxDEV","FloatingLabelInputContainer","div","_c","Input","input","isError","hasValue","isFocused","_c2","Label","label","_c3","ErrorMessage","span","_c4","FloatingLabelInput","labelText","_s","value","setValue","setIsFocused","setIsError","handleInputChange","event","target","handleInputFocus","handleInputBlur","handleInputValidation","trim","children","type","onChange","onFocus","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/Input/FloatingLabelInput.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\n\ninterface FloatingLabelInputProps {\n  labelText: string;\n}\n\ninterface InputProps {\n  hasValue: boolean;\n  isError: boolean;\n  isFocused: boolean;\n}\n\nconst FloatingLabelInputContainer = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n`;\n\nconst Input = styled.input<InputProps>`\n  width: 100%;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n  background: #F0F0F0;\n  color: rgba(0, 0, 0, 0.54);\n  font-family: Roboto;\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1rem;\n  padding: 0.5rem;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-color: ${({ isError }) => (isError ? 'red' : '#2979FF')};\n  }\n\n  ${({ hasValue, isFocused, isError }) =>\n    (hasValue || isFocused) &&\n    css`\n      + label {\n        transform: translateY(-130%) scale(0.75);\n        color: ${isError ? 'red' : '#2979FF'};\n      }\n    `}\n\n  ${({ isError }) =>\n    isError &&\n    css`\n      border-color: red;\n    `}\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  top: 0.25rem;\n  left: 0.5rem;\n  color: #2979FF;\n  font-family: Roboto;\n  font-size: 0.75rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n  pointer-events: none;\n  transition: 0.3s ease-out;\n  transform-origin: top left;\n`;\n\nconst ErrorMessage = styled.span`\n  color: red;\n  font-family: Roboto;\n  font-size: 0.75rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n`;\n\nconst FloatingLabelInput: React.FC<FloatingLabelInputProps> = ({ labelText }) => {\n  const [value, setValue] = useState('');\n  const [isFocused, setIsFocused] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    if (isError) {\n      setIsError(false);\n    }\n  };\n\n  const handleInputFocus = () => {\n    setIsFocused(true);\n  };\n\n  const handleInputBlur = () => {\n    setIsFocused(false);\n  };\n\n  const handleInputValidation = () => {\n    // Puedes implementar tu lógica de validación aquí\n    if (value.trim() === '') {\n      setIsError(true);\n    }\n  };\n\n  return (\n    <FloatingLabelInputContainer>\n      <Input\n        type=\"text\"\n        value={value}\n        hasValue={!!value}\n        isError={isError}\n        isFocused={isFocused}\n        onChange={handleInputChange}\n        onFocus={handleInputFocus}\n        onBlur={() => {\n          handleInputBlur();\n          handleInputValidation();\n        }}\n      />\n      <Label>{labelText}</Label>\n      {isError && <ErrorMessage>Error: El campo no puede estar vacío</ErrorMessage>}\n    </FloatingLabelInputContainer>\n  );\n};\n\nexport default FloatingLabelInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}