{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/Card/Card.tsx\";\n// import React from 'react';\n// import styled from 'styled-components';\n\n// /**\n//  *Card component with 2 versions. with and without image\n//  * @param imageUrl - (optional)the PathUrl if you need to add an image\n//  * @param children - (optional) option to add any component\n//  */\n\n// interface CardProps {\n//   imageUrl?: string;\n//   children?: React.ReactNode;\n// }\n\n// const CardContainer = styled.div<{ imageUrl?: string }>`\n//   width: 23.375rem;\n//   /* height: 100%; */\n//   min-height: ${({ imageUrl }) => (imageUrl ? '27.1875rem' : '12.625rem')};\n//   flex-shrink: 0;\n//   background: green;\n//   box-shadow: 0px 0px 25px 0px rgba(0, 0, 0, 0.10);\n//   border-radius: 8px;\n//   overflow: hidden;\n//   padding: 1rem;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-between;\n// `;\n\n// const Image = styled.img`\n//   width: 100%;\n//   /* height: 50%; */\n// `;\n\n// const Content = styled.div`\n//   display: flex;\n//   background-color: yellow;\n//   height: 100%;\n//   flex-direction: column;\n//   justify-content: space-between;\n// `;\n\n// const Card: React.FC<CardProps> = ({ imageUrl, children }) => {\n//   return (\n//     <CardContainer imageUrl={imageUrl}>\n//       {imageUrl && <Image src={imageUrl} alt=\"Card Image\" />}\n//       <Content>{children}</Content>\n//     </CardContainer>\n//   );\n// };\n\n// export default Card;\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardContainer = styled.div`\n  width: 23.375rem;\n  min-height: ${({\n  imageUrl\n}) => imageUrl ? '27.1875rem' : '12.625rem'};\n  flex-shrink: 0;\n  background: green;\n  box-shadow: 0px 0px 25px 0px rgba(0, 0, 0, 0.10);\n  border-radius: 8px;\n  overflow: hidden;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n`;\n_c = CardContainer;\nconst Image = styled.img`\n  width: 100%;\n`;\n_c2 = Image;\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex: 1; /* Ocupa todo el espacio disponible en CardContainer */\n`;\n_c3 = Content;\nconst Card = ({\n  imageUrl,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    imageUrl: imageUrl,\n    children: [imageUrl && /*#__PURE__*/_jsxDEV(Image, {\n      src: imageUrl,\n      alt: \"Card Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Card;\nexport default Card;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CardContainer\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Card\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","CardContainer","div","imageUrl","_c","Image","img","_c2","Content","_c3","Card","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/Card/Card.tsx"],"sourcesContent":["// import React from 'react';\n// import styled from 'styled-components';\n\n// /**\n//  *Card component with 2 versions. with and without image\n//  * @param imageUrl - (optional)the PathUrl if you need to add an image\n//  * @param children - (optional) option to add any component\n//  */\n\n// interface CardProps {\n//   imageUrl?: string;\n//   children?: React.ReactNode;\n// }\n\n// const CardContainer = styled.div<{ imageUrl?: string }>`\n//   width: 23.375rem;\n//   /* height: 100%; */\n//   min-height: ${({ imageUrl }) => (imageUrl ? '27.1875rem' : '12.625rem')};\n//   flex-shrink: 0;\n//   background: green;\n//   box-shadow: 0px 0px 25px 0px rgba(0, 0, 0, 0.10);\n//   border-radius: 8px;\n//   overflow: hidden;\n//   padding: 1rem;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: space-between;\n// `;\n\n// const Image = styled.img`\n//   width: 100%;\n//   /* height: 50%; */\n// `;\n\n// const Content = styled.div`\n//   display: flex;\n//   background-color: yellow;\n//   height: 100%;\n//   flex-direction: column;\n//   justify-content: space-between;\n// `;\n\n// const Card: React.FC<CardProps> = ({ imageUrl, children }) => {\n//   return (\n//     <CardContainer imageUrl={imageUrl}>\n//       {imageUrl && <Image src={imageUrl} alt=\"Card Image\" />}\n//       <Content>{children}</Content>\n//     </CardContainer>\n//   );\n// };\n\n// export default Card;\n\n\nimport React from 'react';\nimport styled from 'styled-components';\n\ninterface CardProps {\n  imageUrl?: string;\n  children?: React.ReactNode;\n}\n\nconst CardContainer = styled.div<{ imageUrl?: string }>`\n  width: 23.375rem;\n  min-height: ${({ imageUrl }) => (imageUrl ? '27.1875rem' : '12.625rem')};\n  flex-shrink: 0;\n  background: green;\n  box-shadow: 0px 0px 25px 0px rgba(0, 0, 0, 0.10);\n  border-radius: 8px;\n  overflow: hidden;\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Image = styled.img`\n  width: 100%;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex: 1; /* Ocupa todo el espacio disponible en CardContainer */\n`;\n\nconst Card: React.FC<CardProps> = ({ imageUrl, children }) => {\n  return (\n    <CardContainer imageUrl={imageUrl}>\n      {imageUrl && <Image src={imageUrl} alt=\"Card Image\" />}\n      <Content>{children}</Content>\n    </CardContainer>\n  );\n};\n\nexport default Card;\n\n\n\n"],"mappings":";AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOvC,MAAMC,aAAa,GAAGH,MAAM,CAACI,GAA2B;AACxD;AACA,gBAAgB,CAAC;EAAEC;AAAS,CAAC,KAAMA,QAAQ,GAAG,YAAY,GAAG,WAAa;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAXIH,aAAa;AAanB,MAAMI,KAAK,GAAGP,MAAM,CAACQ,GAAI;AACzB;AACA,CAAC;AAACC,GAAA,GAFIF,KAAK;AAIX,MAAMG,OAAO,GAAGV,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAACO,GAAA,GALID,OAAO;AAOb,MAAME,IAAyB,GAAGA,CAAC;EAAEP,QAAQ;EAAEQ;AAAS,CAAC,KAAK;EAC5D,oBACEX,OAAA,CAACC,aAAa;IAACE,QAAQ,EAAEA,QAAS;IAAAQ,QAAA,GAC/BR,QAAQ,iBAAIH,OAAA,CAACK,KAAK;MAACO,GAAG,EAAET,QAAS;MAACU,GAAG,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtDjB,OAAA,CAACQ,OAAO;MAAAG,QAAA,EAAEA;IAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEpB,CAAC;AAACC,GAAA,GAPIR,IAAyB;AAS/B,eAAeA,IAAI;AAAC,IAAAN,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}