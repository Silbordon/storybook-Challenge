{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/Modal/Modal.stories.tsx\";\n// import Modal from \"./Modal\";\n\n// export default {\n//   title: 'Atoms/Modal',\n//   component: Modal,\n//   tags: [\"autodocs\"],\n//   argTypes: {\n//     onClick: { action: 'clicked' },\n//   },\n// }\n\n// const handleClose = () => {\n//     return false\n//   };\n\n//   const handleOpen = () =>{\n//       return true\n//   }\n\n// export const ModalContainer = {\n//     args:{\n//         isOpen:false,\n//         onClick: handleClose(),\n//         onClose: handleOpen()\n//     }\n// };\n\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Atoms/Modal',\n  component: Modal,\n  tags: [\"autodocs\"],\n  argTypes: {\n    onClose: {\n      action: 'onClose'\n    } // Usamos onClose en lugar de onClick para la acción\n  }\n};\n\n//@ts-ignore\nexport const ModalContainer = args => /*#__PURE__*/_jsxDEV(Modal, {\n  ...args,\n  children: \"Modal Content\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 42,\n  columnNumber: 41\n}, this);\n_c = ModalContainer;\nModalContainer.args = {\n  isOpen: false\n};\nvar _c;\n$RefreshReg$(_c, \"ModalContainer\");","map":{"version":3,"names":["Modal","jsxDEV","_jsxDEV","title","component","tags","argTypes","onClose","action","ModalContainer","args","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","isOpen","$RefreshReg$"],"sources":["/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/Modal/Modal.stories.tsx"],"sourcesContent":["// import Modal from \"./Modal\";\n\n// export default {\n//   title: 'Atoms/Modal',\n//   component: Modal,\n//   tags: [\"autodocs\"],\n//   argTypes: {\n//     onClick: { action: 'clicked' },\n//   },\n// }\n\n// const handleClose = () => {\n//     return false\n//   };\n\n//   const handleOpen = () =>{\n//       return true\n//   }\n\n\n// export const ModalContainer = {\n//     args:{\n//         isOpen:false,\n//         onClick: handleClose(),\n//         onClose: handleOpen()\n//     }\n// };\n\n\nimport Modal from \"./Modal\";\n\nexport default {\n  title: 'Atoms/Modal',\n  component: Modal,\n  tags: [\"autodocs\"],\n  argTypes: {\n    onClose: { action: 'onClose' }, // Usamos onClose en lugar de onClick para la acción\n  },\n}\n\n//@ts-ignore\nexport const ModalContainer = (args) => <Modal {...args}>Modal Content</Modal>;\n\nModalContainer.args = {\n  isOpen: false,\n};\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,eAAe;EACbC,KAAK,EAAE,aAAa;EACpBC,SAAS,EAAEJ,KAAK;EAChBK,IAAI,EAAE,CAAC,UAAU,CAAC;EAClBC,QAAQ,EAAE;IACRC,OAAO,EAAE;MAAEC,MAAM,EAAE;IAAU,CAAC,CAAE;EAClC;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAIC,IAAI,iBAAKR,OAAA,CAACF,KAAK;EAAA,GAAKU,IAAI;EAAAC,QAAA,EAAE;AAAa;EAAAC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAO,CAAC;AAACC,EAAA,GAAlEP,cAAc;AAE3BA,cAAc,CAACC,IAAI,GAAG;EACpBO,MAAM,EAAE;AACV,CAAC;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}