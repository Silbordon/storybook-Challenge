{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/organisms/ModalLogin/ModalLogin.stories.tsx\",\n  _s = $RefreshSig$();\n// import ModalLogin from \"./ModalLogin\";\n// import type { Meta } from \"@storybook/react\";\n// import { MemoryRouter } from \"react-router-dom\";\n\n// export default {\n//   title: \"Organism/Modal\",\n//   component: ModalLogin,\n//   tags: [\"autodocs\"],\n//   argTypes: {\n//     setIsOpen: { action: \"onClose\" },\n//   },\n//   decorators: [\n//     (Story) => (\n//       <MemoryRouter initialEntries={[\"/\"]}>\n//         <Story />\n//       </MemoryRouter>\n//     ),\n//   ],\n\n// } as Meta<typeof ModalLogin>;\n\n// // //@ts-ignore\n// // const Template: StoryObj<typeof ModalLogin> = (args) => (\n// //   <ModalLogin {...args} />\n// // );\n\n// //@ts-ignore\n// export const ModalLoginBase = {\n//   args: {\n//     isOpen: true,\n//   },\n// };\n\nimport React, { useState } from \"react\";\nimport ModalLogin from \"./ModalLogin\";\nimport { MemoryRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: \"Organism/Modal\",\n  component: ModalLogin,\n  argTypes: {\n    setIsOpen: {\n      action: \"onClose\"\n    }\n  },\n  decorators: [Story => /*#__PURE__*/_jsxDEV(MemoryRouter, {\n    initialEntries: [\"/\"],\n    children: /*#__PURE__*/_jsxDEV(Story, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this)]\n};\nexport const ModalLoginBase = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(true);\n  return /*#__PURE__*/_jsxDEV(ModalLogin, {\n    isOpen: true,\n    setIsOpen: setIsOpen\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s(ModalLoginBase, \"mEi83NlPXQzy/XIDfTYWzOSvaHw=\");\n_c = ModalLoginBase;\nvar _c;\n$RefreshReg$(_c, \"ModalLoginBase\");","map":{"version":3,"names":["React","useState","ModalLogin","MemoryRouter","jsxDEV","_jsxDEV","title","component","argTypes","setIsOpen","action","decorators","Story","initialEntries","children","fileName","_jsxFileName","lineNumber","columnNumber","ModalLoginBase","_s","isOpen","_c","$RefreshReg$"],"sources":["/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/organisms/ModalLogin/ModalLogin.stories.tsx"],"sourcesContent":["// import ModalLogin from \"./ModalLogin\";\n// import type { Meta } from \"@storybook/react\";\n// import { MemoryRouter } from \"react-router-dom\";\n\n// export default {\n//   title: \"Organism/Modal\",\n//   component: ModalLogin,\n//   tags: [\"autodocs\"],\n//   argTypes: {\n//     setIsOpen: { action: \"onClose\" },\n//   },\n//   decorators: [\n//     (Story) => (\n//       <MemoryRouter initialEntries={[\"/\"]}>\n//         <Story />\n//       </MemoryRouter>\n//     ),\n//   ],\n \n// } as Meta<typeof ModalLogin>;\n\n\n// // //@ts-ignore\n// // const Template: StoryObj<typeof ModalLogin> = (args) => (\n// //   <ModalLogin {...args} />\n// // );\n\n// //@ts-ignore\n// export const ModalLoginBase = {\n//   args: {\n//     isOpen: true,\n//   },\n// };\n\n\nimport React, { useState } from \"react\";\nimport ModalLogin from \"./ModalLogin\";\nimport type { Meta } from \"@storybook/react\";\nimport { MemoryRouter } from \"react-router-dom\";\n\nexport default {\n  title: \"Organism/Modal\",\n  component: ModalLogin,\n  argTypes: {\n    setIsOpen: { action: \"onClose\" },\n  },\n  decorators: [\n    (Story) => (\n      <MemoryRouter initialEntries={[\"/\"]}>\n        <Story />\n      </MemoryRouter>\n    ),\n  ],\n} as Meta;\n\nexport const ModalLoginBase = () => {\n  const [isOpen, setIsOpen] = useState(true);\n\n  return <ModalLogin isOpen={true} setIsOpen={setIsOpen} />;\n};\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,cAAc;AAErC,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe;EACbC,KAAK,EAAE,gBAAgB;EACvBC,SAAS,EAAEL,UAAU;EACrBM,QAAQ,EAAE;IACRC,SAAS,EAAE;MAAEC,MAAM,EAAE;IAAU;EACjC,CAAC;EACDC,UAAU,EAAE,CACTC,KAAK,iBACJP,OAAA,CAACF,YAAY;IAACU,cAAc,EAAE,CAAC,GAAG,CAAE;IAAAC,QAAA,eAClCT,OAAA,CAACO,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CACf;AAEL,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEZ,SAAS,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE1C,oBAAOI,OAAA,CAACH,UAAU;IAACmB,MAAM,EAAE,IAAK;IAACZ,SAAS,EAAEA;EAAU;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3D,CAAC;AAACE,EAAA,CAJWD,cAAc;AAAAG,EAAA,GAAdH,cAAc;AAAA,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}