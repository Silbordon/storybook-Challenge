{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/Button/Button.tsx\";\n// import { FC } from \"react\";\n// import styled from \"styled-components\";\n\n// const backgroundButton = '/assets/icons/button.svg';\n\n// const StyledButton = styled.button`\n//   width: 8.8125rem;\n//   height: 2.5rem;\n//   flex-shrink: 0;\n//   background: url('${backgroundButton}');\n//   color: #FFF;\n//   text-align: center;\n//   font-size: 0.75rem;\n//   font-style: normal;\n//   font-weight: 400;\n//   line-height: 1.125rem;\n//   border: none;\n//   cursor: pointer;\n//   outline: none;\n// `;\n\n// type ButtonProps = {\n//   text: string;\n//   onClick?: () => void;\n// };\n\n// const Button: FC<ButtonProps> = ({ text, onClick }) => {\n//   return <StyledButton onClick={onClick}>{text}</StyledButton>;\n// };\n\n// export default Button;\n\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backgroundButton = '/assets/icons/button.svg';\nconst StyledButton = styled.button`\n  width: 8.8125rem;\n  height: 2.5rem;\n  flex-shrink: 0;\n  background: url('${backgroundButton}');\n  color: #5DA552; /* Color del texto cuando no est치 en hover */\n  text-align: center;\n  font-size: 0.75rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.125rem;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  transition: background-color 0.3s, color 0.3s, border-color 0.3s; /* Transici칩n suave */\n\n  /* Cambios al hacer hover */\n  &:hover {\n    background-color: #FFF; /* Cambia el fondo a blanco */\n    color: #5DA552; /* Cambia el color del texto a verde */\n    border: 1px solid #5DA552; /* Cambia el borde a verde */\n  }\n`;\n_c = StyledButton;\nconst Button = ({\n  text,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    onClick: onClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n};\n_c2 = Button;\nexport default Button;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"names":["styled","jsxDEV","_jsxDEV","backgroundButton","StyledButton","button","_c","Button","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/Button/Button.tsx"],"sourcesContent":["// import { FC } from \"react\";\n// import styled from \"styled-components\";\n\n// const backgroundButton = '/assets/icons/button.svg';\n\n// const StyledButton = styled.button`\n//   width: 8.8125rem;\n//   height: 2.5rem;\n//   flex-shrink: 0;\n//   background: url('${backgroundButton}');\n//   color: #FFF;\n//   text-align: center;\n//   font-size: 0.75rem;\n//   font-style: normal;\n//   font-weight: 400;\n//   line-height: 1.125rem;\n//   border: none;\n//   cursor: pointer;\n//   outline: none;\n// `;\n\n// type ButtonProps = {\n//   text: string;\n//   onClick?: () => void;\n// };\n\n// const Button: FC<ButtonProps> = ({ text, onClick }) => {\n//   return <StyledButton onClick={onClick}>{text}</StyledButton>;\n// };\n\n// export default Button;\n\nimport { FC } from \"react\";\nimport styled from \"styled-components\";\n\nconst backgroundButton = '/assets/icons/button.svg';\n\nconst StyledButton = styled.button`\n  width: 8.8125rem;\n  height: 2.5rem;\n  flex-shrink: 0;\n  background: url('${backgroundButton}');\n  color: #5DA552; /* Color del texto cuando no est치 en hover */\n  text-align: center;\n  font-size: 0.75rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.125rem;\n  border: none;\n  cursor: pointer;\n  outline: none;\n  transition: background-color 0.3s, color 0.3s, border-color 0.3s; /* Transici칩n suave */\n\n  /* Cambios al hacer hover */\n  &:hover {\n    background-color: #FFF; /* Cambia el fondo a blanco */\n    color: #5DA552; /* Cambia el color del texto a verde */\n    border: 1px solid #5DA552; /* Cambia el borde a verde */\n  }\n`;\n\ntype ButtonProps = {\n  text: string;\n  onClick?: () => void;\n};\n\nconst Button: FC<ButtonProps> = ({ text, onClick }) => {\n  return <StyledButton onClick={onClick}>{text}</StyledButton>;\n};\n\nexport default Button;\n"],"mappings":";AAAA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA,OAAOA,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,gBAAgB,GAAG,0BAA0B;AAEnD,MAAMC,YAAY,GAAGJ,MAAM,CAACK,MAAO;AACnC;AACA;AACA;AACA,qBAAqBF,gBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,EAAA,GAtBIF,YAAY;AA6BlB,MAAMG,MAAuB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACrD,oBAAOP,OAAA,CAACE,YAAY;IAACK,OAAO,EAAEA,OAAQ;IAAAC,QAAA,EAAEF;EAAI;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAe,CAAC;AAC9D,CAAC;AAACC,GAAA,GAFIR,MAAuB;AAI7B,eAAeA,MAAM;AAAC,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}