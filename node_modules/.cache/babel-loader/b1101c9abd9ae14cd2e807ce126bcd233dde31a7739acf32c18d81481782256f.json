{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/InputWithIcon/InputPass.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FloatingLabelInputContainer = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n`;\n_c = FloatingLabelInputContainer;\nconst Input = styled.input`\n  width: 100%;\n  height: 3.5rem;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n  background: #f0f0f0;\n  color: rgba(0, 0, 0, 0.54);\n  font-family: Roboto;\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1rem;\n  margin-top: 0.5rem;\n  padding: 1.5rem 0.5rem 0.5rem 0.7rem;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-bottom-width: 2px;\n    border-bottom-color: ${({\n  isError\n}) => isError ? \"red\" : \"#2979FF\"};\n  }\n\n  ${({\n  hasValue,\n  isFocused,\n  isError\n}) => (hasValue || isFocused) && css`\n      + label {\n        transform: translateY(-130%) scale(0.75);\n        color: ${isError ? \"red\" : \"#2979FF\"};\n      }\n    `}\n\n  ${({\n  isError\n}) => isError && css`\n      border-color: red;\n    `}\n`;\n_c2 = Input;\nconst ErrorMessage = styled.span`\n  color: red;\n  font-family: Roboto;\n  font-size: 0.7rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n`;\n_c3 = ErrorMessage;\nconst InputPass = ({\n  placeholderText\n}) => {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [isFocused, setIsFocused] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [textError, setTextError] = useState(\"\");\n  const handleInputChange = event => {\n    setValue(event.target.value);\n    if (isError) {\n      setIsError(false);\n    }\n  };\n  const handleInputFocus = () => {\n    setIsFocused(true);\n  };\n  const handleInputBlur = () => {\n    setIsFocused(false);\n  };\n  const handleInputValidation = () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (value.trim() === \"\") {\n      setIsError(true);\n      setTextError(\"El campo no puede estar vacío\");\n    } else if (!emailRegex.test(value.trim())) {\n      setIsError(true);\n      setTextError(\"Formato de Email incorrecto\");\n    } else {\n      setIsError(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FloatingLabelInputContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"email\",\n      value: value,\n      hasValue: !!value,\n      isError: isError,\n      placeholder: isFocused ? \"\" : placeholderText,\n      isFocused: isFocused,\n      onChange: handleInputChange,\n      onFocus: handleInputFocus,\n      onBlur: () => {\n        handleInputBlur();\n        handleInputValidation();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), isError && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      children: textError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 7\n  }, this);\n};\n_s(InputPass, \"iBttFR7LWAsBm5p1rSAXc5zlGG0=\");\n_c4 = InputPass;\nexport default InputPass;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"FloatingLabelInputContainer\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"ErrorMessage\");\n$RefreshReg$(_c4, \"InputPass\");","map":{"version":3,"names":["React","useState","styled","css","jsxDEV","_jsxDEV","FloatingLabelInputContainer","div","_c","Input","input","isError","hasValue","isFocused","_c2","ErrorMessage","span","_c3","InputPass","placeholderText","_s","value","setValue","setIsFocused","setIsError","textError","setTextError","handleInputChange","event","target","handleInputFocus","handleInputBlur","handleInputValidation","emailRegex","trim","test","children","type","placeholder","onChange","onFocus","onBlur","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["/Users/sebastianmurdoch/Desktop/Freelancer/storybook-Challenge/src/components/atoms/InputWithIcon/InputPass.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styled, { css } from \"styled-components\";\n\ntype LabelInputProps = {\n    placeholderText: string;\n  };\n  \n  type InputProps = {\n    hasValue: boolean;\n    isError: boolean;\n    isFocused: boolean;\n  };\n\n  const FloatingLabelInputContainer = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n`;\n\nconst Input = styled.input<InputProps>`\n  width: 100%;\n  height: 3.5rem;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n  background: #f0f0f0;\n  color: rgba(0, 0, 0, 0.54);\n  font-family: Roboto;\n  font-size: 1rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1rem;\n  margin-top: 0.5rem;\n  padding: 1.5rem 0.5rem 0.5rem 0.7rem;\n  box-sizing: border-box;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    outline: none;\n    border-bottom-width: 2px;\n    border-bottom-color: ${({ isError }) => (isError ? \"red\" : \"#2979FF\")};\n  }\n\n  ${({ hasValue, isFocused, isError }) =>\n    (hasValue || isFocused) &&\n    css`\n      + label {\n        transform: translateY(-130%) scale(0.75);\n        color: ${isError ? \"red\" : \"#2979FF\"};\n      }\n    `}\n\n  ${({ isError }) =>\n    isError &&\n    css`\n      border-color: red;\n    `}\n`;\n\n\n\nconst ErrorMessage = styled.span`\n  color: red;\n  font-family: Roboto;\n  font-size: 0.7rem;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 0.875rem;\n`;\n\n  \nconst InputPass: React.FC<LabelInputProps> = ({\n    placeholderText,\n  }) => {\n    const [value, setValue] = useState(\"\");\n    const [isFocused, setIsFocused] = useState(false);\n    const [isError, setIsError] = useState(false);\n    const [textError, setTextError] = useState(\"\")\n  \n   \n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      setValue(event.target.value);\n      if (isError) {\n        setIsError(false);\n      }\n    };\n  \n    const handleInputFocus = () => {\n      setIsFocused(true);\n    };\n  \n    const handleInputBlur = () => {\n      setIsFocused(false);\n    };\n  \n    const handleInputValidation = () => {\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  \n      if (value.trim() === \"\") {\n        setIsError(true);\n        setTextError(\"El campo no puede estar vacío\")\n      } else if (!emailRegex.test(value.trim())) {\n        setIsError(true);\n        setTextError(\"Formato de Email incorrecto\")\n      } else {\n        setIsError(false);\n      }\n    };\n  \n    return (\n      <FloatingLabelInputContainer>\n        <Input\n          type=\"email\"\n          value={value}\n          hasValue={!!value}\n          isError={isError}\n          placeholder={isFocused ? \"\" : placeholderText}\n          isFocused={isFocused}\n          onChange={handleInputChange}\n          onFocus={handleInputFocus}\n          onBlur={() => {\n            handleInputBlur();\n            handleInputValidation();\n          }}\n        />\n        {isError && (\n          <ErrorMessage>{textError}</ErrorMessage>\n        )}\n      </FloatingLabelInputContainer>\n    );\n  };\n\nexport default InputPass;\n\n\n\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}